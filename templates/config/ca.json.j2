{
	"root": "{{ step_ca_root_dir }}/certs/root_ca.crt",
	"federatedRoots": null,
{% if 'ca_server' in group_names %}
	"crt": "{{ step_ca_root_dir }}/certs/{{ item.name }}/intermediate_ca.crt",
	"key": "{{ step_ca_root_dir }}/secrets/{{ item.name }}/intermediate_ca.key",
{% elif 'ra_servers' in group_names %}
	"crt": "",
	"key": "",
{% endif %}
	"address": "{{ ansible_default_ipv4.address }}:{{ item.listen_port }}",
{% if 'ca_server' in group_names %}
	"insecureAddress": "{{ ansible_default_ipv4.address }}:{{ item.insecure_port }}",
{% elif 'ra_servers' in group_names %}
	"insecureAddress": "",
{% endif %}
	"dnsNames": [
{% if 'ca_server' in group_names %}
		"{{ step_ca_structure.rootCA.fqdn | default(inventory_hostname) }}"
{% elif 'ra_servers' in group_names %}
		"{{ step_ca_ra_fqdn | default(inventory_hostname) }}"
{% endif %}
	],
	"logger": {
		"format": "text"
	},
	"db": {
		"type": "badgerv2",
		"dataSource": "{{ step_ca_root_dir }}/db/{{ item.name }}/",
		"badgerFileLoadingMode": ""
	},
	"authority": {
{% if 'ca_server' in group_names %}
		"provisioners": [
		],
		"template": {
			"country": "{{ item.country }}",
			"organization": "{{ item.organisation }}",
			"locality": "{{ item.locality }}",
			"province": "{{ item.province }}"
		},
		"backdate": "1m0s"
{% elif 'ra_servers' in group_names %}
		"type": "stepcas",
		"certificateAuthority": "https://{{ step_ca_structure.rootCA.fqdn | default(groups['ca_server'][0]) }}:{{ item.listen_port }}",
		"certificateAuthorityFingerprint": "{{ hostvars[groups.ca_server.0].rootCA_fingerprint.stdout }}",
		"certificateIssuer": {
			"type": "JWK",
			"provisioner": "ra-{{ inventory_hostname }}",
			"key": "{{ step_ca_root_dir }}/secrets/{{ item.name }}/ra.pem"
		},
		"provisioners": [
			{
				"type": "ACME",
				"name": "acme",
				"forceCN": true,
				"claims": {
					"minTLSCertDuration": "{{ item.minTLSCertDuration }}",
					"maxTLSCertDuration": "{{ item.maxTLSCertDuration }}",
					"defaultTLSCertDuration": "{{ item.defaultTLSCertDuration }}",
					"disableRenewal": false,
					"enableSSHCA": false
				}
			}
		]
{% endif %}
	},
	"tls": {
		"cipherSuites": [
			"TLS_CHACHA20_POLY1305_SHA256",
			"TLS_AES_256_GCM_SHA384",
			"TLS_AES_128_GCM_SHA256"
		],
		"minVersion": 1.3,
		"maxVersion": 1.3,
		"renegotiation": false
	},
{% if 'ca_server' in group_names %}
	"commonName": "{{ item.organisation }} {{ item.name }} Certification Authority service",
	"crl": {
		"enabled": true,
		"generateOnRevoke": true,
		"cacheDuration": "24h0m0s",
		"idpURL": "{{ item.crlDistributionPoints }}"
	}
{% elif 'ra_servers' in group_names %}
	"commonName": "{{ item.organisation }} {{ item.name }} Registration Authority service"
{% endif %}
}
