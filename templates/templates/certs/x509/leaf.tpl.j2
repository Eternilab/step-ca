{
{{ range .SANs }}
{% if item.sanFilterType is defined and item.sanFilterType == 'email' %}
  {{ if not (and (regexMatch ".*\\@@{ step_ca_domain | regex_replace('\.', '\\\\\.') }@" .Value) (eq .Type "email")) }}
    {{ fail "Not a *@@{ step_ca_domain }@ email" }}
{% else %}
  {{ if not (and (regexMatch ".*\\.@{ step_ca_domain | regex_replace('\.', '\\\\\.') }@" .Value) (eq .Type "dns")) }}
    {{ fail "Not a *.@{ step_ca_domain }@ host" }}
{% endif %}
  {{ end }}
  {{- if (and (eq .Type "dns") ({% for ra_host in groups['ra_servers'] %}
(eq .Value "@{ hostvars[ra_host].step_ca_ra_fqdn | default(ra_host) }@")
@{- " || " if not loop.last else ")) }}" -}@
  {% endfor +%}
    "extKeyUsage": ["serverAuth"],
  {{- else }}
    "extKeyUsage": ["@{ item.extKeyUsage }@"],
  {{- end }}
{{ end }}
    "subject": {
        "commonName": {{ toJson .Subject.CommonName }}
    },
    "sans": {{ toJson .SANs }},
{{- if typeIs "*rsa.PublicKey" .Insecure.CR.PublicKey }}
    {{ if lt .Insecure.CR.PublicKey.Size @{ item.min_key_size_rsa }@ }}
        {{ fail "Key length must be at least @{ item.min_key_size_rsa * 8 | int | abs }@ bits" }}
    {{ end }}
    "keyUsage": ["keyEncipherment", "digitalSignature"],
{{- else }}
    "keyUsage": ["digitalSignature"],
{{- end }}
    "basicConstraints": {
        "isCA": false
    },
    "IssuingCertificateURL": ["@{ item.IssuingCertificateURL }@"],
    "crlDistributionPoints": ["@{ item.crlDistributionPoints }@"]
}
