{
{% if item.extKeyUsage is defined and item.extKeyUsage != 'serverAuth' %}
{{ $ra := 0 }}
{{ $sans := .SANs }}
{% endif %}
{{ range .SANs }}
    {{ if (eq .Type "dns") }}
{% if item.extKeyUsage is defined and item.extKeyUsage != 'serverAuth' %}
    {%- if groups['ra_servers']|count is greaterthan 0 %}
        {{ if (and (eq (len $sans) 1) (eq .Value
        {%- for ra_host in groups['ra_servers'] %}
 "@{ hostvars[ra_host].step_ca_ra_fqdn | default(ra_host) }@"
@{- ")) }}
            {{ $ra = 1 }}
" if loop.last -}@
        {%- endfor %}
    {%- endif %}
    {%- if item.sanFilterType is defined and item.sanFilterType == 'email' %}
        {{ else }}
            {{ fail "SAN is not an email" }}
        {{ end }}
    {{ end }}
    {{ if (eq .Type "email") }}
        {{ if (not (regexMatch ".*\\@@{ step_ca_domain | regex_replace('\.', '\\\\\.') }@" .Value)) }}
            {{ fail "SAN is not a *@@{ step_ca_domain }@ email" }}
        {{ end }}
    {% else %}
        {{ end }}
        {{ if (not (regexMatch ".*\\.@{ step_ca_domain | regex_replace('\.', '\\\\\.') }@" .Value)) }}
            {{ fail "SAN is not a *.@{ step_ca_domain }@ host" }}
        {{ end }}
    {{ else }}
        {{ fail "SAN is not a host name" }}
    {% endif -%}
    {{ end }}
{% else %}
        {{ if (not (regexMatch ".*\\.@{ step_ca_domain | regex_replace('\.', '\\\\\.') }@" .Value)) }}
            {{ fail "SAN is not a *.@{ step_ca_domain }@ host" }}
        {{ end }}
    {{ else }}
        {{ fail "SAN is not a host name" }}
    {{ end }}
{% endif %}
{{ end }}
    "subject": {
        "commonName": {{ toJson .Subject.CommonName }}
    },
    "sans": {{ toJson .SANs }},
{{- if typeIs "*rsa.PublicKey" .Insecure.CR.PublicKey }}
    {{ if lt .Insecure.CR.PublicKey.Size @{ item.min_key_size_rsa }@ }}
        {{ fail "Key length must be at least @{ item.min_key_size_rsa * 8 | int | abs }@ bits" }}
    {{ end }}
    "keyUsage": ["keyEncipherment", "digitalSignature"],
{{- else }}
    "keyUsage": ["digitalSignature"],
{{- end }}
{% if item.extKeyUsage is defined and item.extKeyUsage != 'serverAuth' %}
{{- if $ra }}
    "extKeyUsage": ["serverAuth"],
{{- else }}
    "extKeyUsage": ["@{ item.extKeyUsage }@"],
{{- end }}
{% else %}
    "extKeyUsage": ["serverAuth"],
{% endif %}
    "basicConstraints": {
        "isCA": false
    },
    "IssuingCertificateURL": ["@{ item.IssuingCertificateURL }@"],
    "crlDistributionPoints": ["@{ item.crlDistributionPoints }@"]
}
