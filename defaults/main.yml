---
# State is latest by default
# step_ca_apt_state: latest

# Array of packages to install
# step_ca_apt_packages:
#   - step-ca

step_ca_tmp_dir: /tmp

step_ca_version: 0.27.4

# Hardware Architecture of the step-ca server
# Can be any of :
# amd64, 383, arm64, armv7
# Linux is the only OS supported because of the binaries available on Github
#step_ca_arch: is set at the beginning of playbook from the following match list
step_ca_arch_match:
  i386: "386"
  i686: "386"
  x86_64: "amd64"
  armv5: "armv5"
  armv5l: "armv5"
  armv5h: "armv5"
  armv6: "armv6"
  armv6l: "armv6"
  armv6h: "armv6"
  armv7: "armv7"
  armv7l: "armv7"
  armv7h: "armv7"
  armv8b: "arm64"
  armv8l: "arm64"
  aarch64: "arm64"

# How to install step-ca
# Can be any of :
# manual, binary, debian
# In manual, only ca_server will be installed in manual mode, ra_servers will be installed in debian mode
# In binary, CA and RAs will be installed in binary mode
# In debian, CA and RAs will be installed in debian mode
# In case you are using a HSM (ex: YubiHSM) on your CA, you need to use manual mode, prebuild binaries lack HSM support.
step_ca_install_mode: debian

# User and group for step daemon
step_ca_user: step
step_ca_group: step

# Install files targets for Manual or Binary mode
# don't use /usr/bin/step-ca (binary) or /bin/step-ca (usrmerge symlink) which are used by the Debian package !
step_ca_bin_file: /usr/local/bin/step-ca

# Debian dependencies
step_ca_debian_dep:
  - make
  - gcc
  - ack
  - libpcsclite-dev
  - pkg-config

step_ca_debian_dep_backports:
  - golang

#####
### Manual installation
#####

step_ca_tarball_manual: step-ca_linux_{{ step_ca_version }}.tar.gz

# URL to download source tarball from
step_ca_url_manual: https://github.com/smallstep/certificates/archive/refs/tags/v{{ step_ca_version }}.tar.gz

#####
### Binary installation
#####

step_ca_tarball_binary: step-ca_linux_{{ step_ca_version }}_{{ step_ca_arch }}.tar.gz

# URL to download binary tarball from
step_ca_url_binary: https://github.com/smallstep/certificates/releases/download/v{{ step_ca_version }}/{{ step_ca_tarball_binary }}

#####
### Debian installation
#####

step_ca_deb: step-ca_{{ step_ca_version }}_{{ step_ca_arch }}.deb

# URL to download Debian package from
step_ca_url_deb: https://github.com/smallstep/certificates/releases/download/v{{ step_ca_version }}/{{ step_ca_deb }}

step_ca_apt_state: present

#####
### Default user variables
#####

# Default configuration directories used by step-ca
step_ca_dirlist:
  - certs
  - config
  - db
  - secrets
  - templates/certs/x509

# Directory on the CA used to store the JWK public keys from the RAs for each subCA
step_ca_jwk_RAs_dir: jwk_RAs

# This will use a YubiHSM to store the intermediate CAs, otherwise it'll be stored on disk.
# true  -> YubiHSM
# false -> Store on disk
step_ca_yubihsm: false

step_ca_root_dir: /etc/step-ca

# Proxy handling
# You can set this variable to be able to go out
# to the internet :
#
proxy_env:
#   http_proxy: http://proxy.example.com:3128
#   https_proxy: http://proxy.example.com:3128
#   ftp_proxy: http://proxy.example.com:3128

# Default administrator name/email, used to create the first Json Web Key for admin acces (JWK provider)) to the step-ca service.
# step_ca_admin_jwk_name: "admin@example.com"

# Domain name to sign certificates for
# Used in templating for leaf certificates :
# When a Certificate Signing Request is presented to the CA, the FQDN in
# that CSR must end with this string to be valid.
# step_ca_domain: "example.com"

step_ca_structure:
  rootCA:
# FQDN can optionnaly be defined, if not, the machine name in the inventory group ca_server will be used
# It is used on the RAs as an address to contact the CA host and on the CA to validate the TLS SNI send by the TLS clients
#    fqdn: "ca.{{ step_ca_domain }}"
    organisation: "Ma Societe"
    locality: "Paris"
    province: "IDF"
    country: "FR"
    # EC or OKP
    keytype: "EC"
    # EC: P-256, P-384, P-521
    # OKP: Ed25519
    keycurve: "P-384"
    certDuration: "87600h"
    IssuingCertificateURL: "http://issuers.@{ step_ca_domain }@/root/@{ step_ca_domain }@-CA.der"
    crlDistributionPoints: "http://crl.@{ step_ca_domain }@/root/crl"
  subCA:
    certDuration: "43800h"
    ocspFQDN: "http://ocsp.pki.@{ step_ca_domain }@"
    instances:
      - name : "S1"
        organisation: "Ma Societe"
        locality: "Paris"
        province: "IDF"
        country: "FR"
        minTLSCertDuration: "1440h0m0s"
        maxTLSCertDuration: "2160h0m0s"
        defaultTLSCertDuration: "2160h0m0s"
        # match: ".*\\.example\\.com"
        min_key_size_rsa: 512
        extKeyUsage: "serverAuth"
        IssuingCertificateURL: "http://issuers.{{ step_ca_domain }}/s1/{{ step_ca_domain }}-subCA.der"
        crlDistributionPoints: "http://crl.{{ step_ca_domain }}/s1/crl"
        listen_port: 9100
        insecure_port: 8080
        enabled: True
      - name : "C1"
        organisation: "Ma Societe"
        locality: "Paris"
        province: "IDF"
        country: "FR"
        minTLSCertDuration: "1440h0m0s"
        maxTLSCertDuration: "2160h0m0s"
        defaultTLSCertDuration: "2160h0m0s"
        # match: ".*\\.example\\.com"
        min_key_size_rsa: 512
        extKeyUsage: "clientAuth"
        IssuingCertificateURL: "http://issuers.{{ step_ca_domain }}/c1/{{ step_ca_domain }}-subCA.der"
        crlDistributionPoints: "http://crl.{{ step_ca_domain }}/c1/crl"
        listen_port: 9101
        insecure_port: 8081
        enabled: True
